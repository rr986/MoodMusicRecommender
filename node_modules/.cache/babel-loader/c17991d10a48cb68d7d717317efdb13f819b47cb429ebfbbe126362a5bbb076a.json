{"ast":null,"code":"\"use strict\";\n\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nvar _a;\nimport { stringifyValueForError } from \"./value.js\";\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\nexport class ConvexError extends Error {\n  constructor(data) {\n    super(typeof data === \"string\" ? data : stringifyValueForError(data));\n    __publicField(this, \"name\", \"ConvexError\");\n    __publicField(this, \"data\");\n    __publicField(this, _a, true);\n    this.data = data;\n  }\n}\n_a = IDENTIFYING_FIELD;","map":{"version":3,"names":["_a","stringifyValueForError","IDENTIFYING_FIELD","Symbol","for","ConvexError","Error","constructor","data","__publicField"],"sources":["/Users/Ragini/Movies/MoodMusicRecommender/node_modules/convex/src/values/errors.ts"],"sourcesContent":["import { Value, stringifyValueForError } from \"./value.js\";\n\nconst IDENTIFYING_FIELD = Symbol.for(\"ConvexError\");\n\nexport class ConvexError<TData extends Value> extends Error {\n  name = \"ConvexError\";\n  data: TData;\n  [IDENTIFYING_FIELD] = true;\n\n  constructor(data: TData) {\n    super(typeof data === \"string\" ? data : stringifyValueForError(data));\n    this.data = data;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;AAAA,IAAAA,EAAA;AAAA,SAAgBC,sBAAA,QAA8B;AAE9C,MAAMC,iBAAA,GAAoBC,MAAA,CAAOC,GAAA,CAAI,aAAa;AAE3C,aAAMC,WAAA,SAAyCC,KAAA,CAAM;EAK1DC,YAAYC,IAAA,EAAa;IACvB,MAAM,OAAOA,IAAA,KAAS,WAAWA,IAAA,GAAOP,sBAAA,CAAuBO,IAAI,CAAC;IALtEC,aAAA,eAAO;IACPA,aAAA;IACAA,aAAA,OAACT,EAAA,EAAqB;IAIpB,KAAKQ,IAAA,GAAOA,IAAA;EACd;AACF;AANGR,EAAA,GAAAE,iBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}