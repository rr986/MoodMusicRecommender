{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import MoodInput from'./components/MoodInput.js';import AlbumList from'./components/AlbumList.js';import SavedAlbums from'./components/SavedAlbums.js';import{useMutation,useQuery}from\"convex/react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AppContainer=styled.div`\n  padding: 35px;\n  max-width: 1200px;\n  margin: 0 auto;\n`;function App(){const[albums,setAlbums]=useState([]);const[savedAlbums,setSavedAlbums]=useState([]);// Local state for saved albums\nconst[sentimentWeight,setSentimentWeight]=useState(0.8);const[popularityWeight,setPopularityWeight]=useState(0.2);const userId=\"user-id\";const saveSongMutation=useMutation('saveSong');const deleteSongMutation=useMutation('deleteSong');const savedAlbumsQuery=useQuery('getSavedSongs',{userId})||[];// Sync the saved albums from Convex query to local state\nuseEffect(()=>{setSavedAlbums(savedAlbumsQuery);},[savedAlbumsQuery]);const fetchRecommendations=mood=>{fetch(`/recommend?mood=${encodeURIComponent(mood)}&sentimentWeight=${sentimentWeight}&popularityWeight=${popularityWeight}`).then(response=>response.json()).then(data=>{if(data.recommendedSongs){setAlbums(data.recommendedSongs);}else{setAlbums([]);}}).catch(error=>{console.error('Error fetching recommendations:',error);});};const saveForLater=album=>{saveSongMutation({song:album,userId}).then(()=>{console.log('Song saved successfully');}).catch(error=>{console.error('Error saving song:',error);});};const handleDelete=songId=>{deleteSongMutation({songId}).then(()=>{console.log(`Song with ID ${songId} deleted successfully`);// Update local state to reflect the deletion\nconst updatedAlbums=savedAlbums.filter(album=>album._id!==songId);setSavedAlbums(updatedAlbums);}).catch(error=>{console.error('Error deleting song:',error);});};return/*#__PURE__*/_jsxs(AppContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Music Mood Recommender\"}),/*#__PURE__*/_jsx(MoodInput,{onSubmit:fetchRecommendations}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Adjust Sentiment Weight: \",sentimentWeight]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"1\",step:\"0.1\",value:sentimentWeight,onChange:e=>setSentimentWeight(Number(e.target.value))}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Adjust Popularity Weight: \",popularityWeight]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"0\",max:\"1\",step:\"0.1\",value:popularityWeight,onChange:e=>setPopularityWeight(Number(e.target.value))})]}),/*#__PURE__*/_jsx(AlbumList,{albums:albums,onSave:saveForLater}),/*#__PURE__*/_jsx(SavedAlbums,{albums:savedAlbums,handleDelete:handleDelete})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","styled","MoodInput","AlbumList","SavedAlbums","useMutation","useQuery","jsx","_jsx","jsxs","_jsxs","AppContainer","div","App","albums","setAlbums","savedAlbums","setSavedAlbums","sentimentWeight","setSentimentWeight","popularityWeight","setPopularityWeight","userId","saveSongMutation","deleteSongMutation","savedAlbumsQuery","fetchRecommendations","mood","fetch","encodeURIComponent","then","response","json","data","recommendedSongs","catch","error","console","saveForLater","album","song","log","handleDelete","songId","updatedAlbums","filter","_id","children","onSubmit","type","min","max","step","value","onChange","e","Number","target","onSave"],"sources":["/Users/Ragini/Movies/MoodMusicRecommender/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport MoodInput from './components/MoodInput.js';\nimport AlbumList from './components/AlbumList.js';\nimport SavedAlbums from './components/SavedAlbums.js';\nimport { useMutation, useQuery } from \"convex/react\";\n\nconst AppContainer = styled.div`\n  padding: 35px;\n  max-width: 1200px;\n  margin: 0 auto;\n`;\n\nfunction App() {\n  const [albums, setAlbums] = useState([]);\n  const [savedAlbums, setSavedAlbums] = useState([]);  // Local state for saved albums\n  const [sentimentWeight, setSentimentWeight] = useState(0.8);\n  const [popularityWeight, setPopularityWeight] = useState(0.2);\n\n  const userId = \"user-id\";\n\n  const saveSongMutation = useMutation('saveSong');\n  const deleteSongMutation = useMutation('deleteSong');\n  const savedAlbumsQuery = useQuery('getSavedSongs', { userId }) || [];\n\n  // Sync the saved albums from Convex query to local state\n  useEffect(() => {\n    setSavedAlbums(savedAlbumsQuery);\n  }, [savedAlbumsQuery]);\n\n  const fetchRecommendations = (mood) => {\n    fetch(`/recommend?mood=${encodeURIComponent(mood)}&sentimentWeight=${sentimentWeight}&popularityWeight=${popularityWeight}`)\n      .then(response => response.json())\n      .then(data => {\n        if (data.recommendedSongs) {\n          setAlbums(data.recommendedSongs);\n        } else {\n          setAlbums([]);\n        }\n      })\n      .catch(error => {\n        console.error('Error fetching recommendations:', error);\n      });\n  };\n\n  const saveForLater = (album) => {\n    saveSongMutation({ song: album, userId }).then(() => {\n      console.log('Song saved successfully');\n    }).catch(error => {\n      console.error('Error saving song:', error);\n    });\n  };\n\n  const handleDelete = (songId) => {\n    deleteSongMutation({ songId }).then(() => {\n      console.log(`Song with ID ${songId} deleted successfully`);\n      // Update local state to reflect the deletion\n      const updatedAlbums = savedAlbums.filter((album) => album._id !== songId);\n      setSavedAlbums(updatedAlbums);\n    }).catch(error => {\n      console.error('Error deleting song:', error);\n    });\n  };\n\n  return (\n    <AppContainer>\n      <h1>Music Mood Recommender</h1>\n      <MoodInput onSubmit={fetchRecommendations} />\n      <div>\n        <label>Adjust Sentiment Weight: {sentimentWeight}</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={sentimentWeight}\n          onChange={(e) => setSentimentWeight(Number(e.target.value))}\n        />\n        <label>Adjust Popularity Weight: {popularityWeight}</label>\n        <input\n          type=\"range\"\n          min=\"0\"\n          max=\"1\"\n          step=\"0.1\"\n          value={popularityWeight}\n          onChange={(e) => setPopularityWeight(Number(e.target.value))}\n        />\n      </div>\n      <AlbumList albums={albums} onSave={saveForLater} />\n      <SavedAlbums albums={savedAlbums} handleDelete={handleDelete} />\n    </AppContainer>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}